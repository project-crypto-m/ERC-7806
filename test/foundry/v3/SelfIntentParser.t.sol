/* solhint-disable func-name-mixedcase */
/* solhint-disable const-name-snakecase */

// SPDX-License-Identifier: MIT
pragma solidity ^0.8.24;

import "forge-std/Test.sol";
import {MessageHashUtils} from "openzeppelin/utils/cryptography/MessageHashUtils.sol";
import {ECDSA} from "openzeppelin/utils/cryptography/ECDSA.sol";
import {SelfIntentParser} from "./../../../contracts/v3/accounts/SelfIntentParser.sol";

contract SelfIntentParserTest is Test {
    using ECDSA for bytes32;

    SelfIntentParser parser;

    address public account;
    uint256 public accountKey;

    function setUp() public {
        (account, accountKey) = makeAddrAndKey("account");
        parser = new SelfIntentParser();
    }

    function testParseSelfIntent() public {
        bytes memory intent = hex"f9e83046f680fe111646aed7836fdaff5e50770af9e83046f680fe111646aed7836fdaff5e50770a00040199000001840184f952e19c66cbb9ce5c3bfd7b91bad8a0f3ac12f9010000000000000000000000000000000000000000000000000000000000000020f35994ce00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000138f952e19c66cbb9ce5c3bfd7b91bad8a0f3ac12f97c86a8ab0ebd3a5a2d094b06dabcd1796a28aa77002000680082000004d200000000697457a18cdc2a39118717e04b9efbc1b8ef66ea2a754843e022b6aaf32d52ce8ecc06330c6858b2c0092b9300000000000000000000000000000000000000000000000000000000000000169b069fff55acd8668225021e2142e432031cb0cd000000000000000000000000000000000000000000000000000000000000000b6935bac4614d9fa2a4436edccc6bc57ca1177030dca7dad3ab7c8195f667f60f5bc91e0191e55e0a139a5e09e51437f007ee43047bbcf8238a62a533294cc0fa1c47aec196cbe64977701d2893e9039e93dab6ae0594aceca23d403fad419460914647cc8542ad47ba82becf4e925498d528847fbd6b1bfcb93fd549b7a32032621c0000000000000000f952e19c66cbb9ce5c3bfd7b91bad8a0f3ac12f900f35994ce00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000138f952e19c66cbb9ce5c3bfd7b91bad8a0f3ac12f97c86a8ab0ebd3a5a2d094b06dabcd1796a28aa77002000680082000004d200000000697457a18cdc2a39118717e04b9efbc1b8ef66ea2a754843e022b6aaf32d52ce8ecc06330c6858b2c0092b9300000000000000000000000000000000000000000000000000000000000000169b069fff55acd8668225021e2142e432031cb0cd000000000000000000000000000000000000000000000000000000000000000b6935bac4614d9fa2a4436edccc6bc57ca1177030dca7dad3ab7c8195f667f60f5bc91e0191e55e0a139a5e09e51437f007ee43047bbcf8238a62a533294cc0fa1c47aec196cbe64977701d2893e9039e93dab6ae0594aceca23d403fad419460914647cc8542ad47ba82becf4e925498d528847fbd6b1bfcb93fd549b7a32032621c0000000000000000";

        (uint16[] memory dls, address[] memory ds, uint256[] memory vs, bytes[] memory cds, ) = parser.parseSelfIntent(intent);
        assertEq(2, dls.length);
        assertEq(388, dls[0]);
        assertEq(388, dls[1]);
        assertEq(2, ds.length);
        assertEq(address(0xF952e19C66cBb9Ce5c3BFD7B91bad8a0f3Ac12f9), ds[0]);
        assertEq(address(0xF952e19C66cBb9Ce5c3BFD7B91bad8a0f3Ac12f9), ds[1]);
        assertEq(2, vs.length);
        assertEq(32, vs[0]);
        assertEq(0, vs[1]);
        assertEq(2, cds.length);
        assertEq(hex"f35994ce00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000138f952e19c66cbb9ce5c3bfd7b91bad8a0f3ac12f97c86a8ab0ebd3a5a2d094b06dabcd1796a28aa77002000680082000004d200000000697457a18cdc2a39118717e04b9efbc1b8ef66ea2a754843e022b6aaf32d52ce8ecc06330c6858b2c0092b9300000000000000000000000000000000000000000000000000000000000000169b069fff55acd8668225021e2142e432031cb0cd000000000000000000000000000000000000000000000000000000000000000b6935bac4614d9fa2a4436edccc6bc57ca1177030dca7dad3ab7c8195f667f60f5bc91e0191e55e0a139a5e09e51437f007ee43047bbcf8238a62a533294cc0fa1c47aec196cbe64977701d2893e9039e93dab6ae0594aceca23d403fad419460914647cc8542ad47ba82becf4e925498d528847fbd6b1bfcb93fd549b7a32032621c0000000000000000", cds[0]);
        assertEq(hex"f35994ce00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000138f952e19c66cbb9ce5c3bfd7b91bad8a0f3ac12f97c86a8ab0ebd3a5a2d094b06dabcd1796a28aa77002000680082000004d200000000697457a18cdc2a39118717e04b9efbc1b8ef66ea2a754843e022b6aaf32d52ce8ecc06330c6858b2c0092b9300000000000000000000000000000000000000000000000000000000000000169b069fff55acd8668225021e2142e432031cb0cd000000000000000000000000000000000000000000000000000000000000000b6935bac4614d9fa2a4436edccc6bc57ca1177030dca7dad3ab7c8195f667f60f5bc91e0191e55e0a139a5e09e51437f007ee43047bbcf8238a62a533294cc0fa1c47aec196cbe64977701d2893e9039e93dab6ae0594aceca23d403fad419460914647cc8542ad47ba82becf4e925498d528847fbd6b1bfcb93fd549b7a32032621c0000000000000000", cds[1]);
    }

    function testParseSelfIntent2() public {
        bytes memory intent = hex"f9e83046f680fe111646aed7836fdaff5e50770af9e83046f680fe111646aed7836fdaff5e50770a000201990000018473e790c5de2326ad1aa204f058061d7939b270b300f35994ce0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000013873e790c5de2326ad1aa204f058061d7939b270b37c86a8ab0ebd3a5a2d094b06dabcd1796a28aa77002000680082000004d200000000697595c38cdc2a39118717e04b9efbc1b8ef66ea2a7548439b069fff55acd8668225021e2142e432031cb0cd0000000000000000000000000000000000000000000000000000000000000141e022b6aaf32d52ce8ecc06330c6858b2c0092b93000000000000000000000000000000000000000000000000000000000000007bfab1e4710a3150c39bb36caf96821f1232b10a6ae995e819576b72563fdcf4d43f73d74d7cff91b0048a500eb755c297f4dcea9fe6455b8d2656d6b4ed7a98f21c42b7575907b4a96780bfcd973f050303017125481d7e283eca8cd7be50afe4935b6e0f21d6b6f50452dc4ef8c8872626e68732720eec784a2ae20dff557b931c1b0000000000000000";

        (uint16[] memory dls, address[] memory ds, uint256[] memory vs, bytes[] memory cds, ) = parser.parseSelfIntent(intent);
        assertEq(2, dls.length);
        assertEq(388, dls[0]);
        assertEq(388, dls[1]);
        assertEq(2, ds.length);
        assertEq(address(0xF952e19C66cBb9Ce5c3BFD7B91bad8a0f3Ac12f9), ds[0]);
        assertEq(address(0xF952e19C66cBb9Ce5c3BFD7B91bad8a0f3Ac12f9), ds[1]);
        assertEq(2, vs.length);
        assertEq(32, vs[0]);
        assertEq(0, vs[1]);
        assertEq(2, cds.length);
        assertEq(hex"f35994ce00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000138f952e19c66cbb9ce5c3bfd7b91bad8a0f3ac12f97c86a8ab0ebd3a5a2d094b06dabcd1796a28aa77002000680082000004d200000000697457a18cdc2a39118717e04b9efbc1b8ef66ea2a754843e022b6aaf32d52ce8ecc06330c6858b2c0092b9300000000000000000000000000000000000000000000000000000000000000169b069fff55acd8668225021e2142e432031cb0cd000000000000000000000000000000000000000000000000000000000000000b6935bac4614d9fa2a4436edccc6bc57ca1177030dca7dad3ab7c8195f667f60f5bc91e0191e55e0a139a5e09e51437f007ee43047bbcf8238a62a533294cc0fa1c47aec196cbe64977701d2893e9039e93dab6ae0594aceca23d403fad419460914647cc8542ad47ba82becf4e925498d528847fbd6b1bfcb93fd549b7a32032621c0000000000000000", cds[0]);
        assertEq(hex"f35994ce00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000138f952e19c66cbb9ce5c3bfd7b91bad8a0f3ac12f97c86a8ab0ebd3a5a2d094b06dabcd1796a28aa77002000680082000004d200000000697457a18cdc2a39118717e04b9efbc1b8ef66ea2a754843e022b6aaf32d52ce8ecc06330c6858b2c0092b9300000000000000000000000000000000000000000000000000000000000000169b069fff55acd8668225021e2142e432031cb0cd000000000000000000000000000000000000000000000000000000000000000b6935bac4614d9fa2a4436edccc6bc57ca1177030dca7dad3ab7c8195f667f60f5bc91e0191e55e0a139a5e09e51437f007ee43047bbcf8238a62a533294cc0fa1c47aec196cbe64977701d2893e9039e93dab6ae0594aceca23d403fad419460914647cc8542ad47ba82becf4e925498d528847fbd6b1bfcb93fd549b7a32032621c0000000000000000", cds[1]);
    }
}
